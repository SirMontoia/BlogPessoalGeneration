package com.blogpessoal.Turma29.repository;

import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import com.blogpessoal.Turma29.model.Postagem;

// REPOSITORIO É RESPONSÁVEL PELA COMUNICAÇÃO COM BANCO DE DADOS
// INTERFACE RESPONSÁVEL POR GUARDAR DADOS DA POSTAGEM (GUARDAR OS DADOS DO BANCO)
// ''POSTAGEM'' DENTRO DOS <> INDICA QUAL A ENTIDADE QUE ESTAMOS TRABALHANDO 
//''LONG'' DENTRO DOS <> INDICA QUAL O TIPO DE ID QUE SE ESTA TRABALHANDO (NA CLASSE POSTAGEM, NOSSO ID É LONG)
//''REPOSITORY'' INDICA QUE A CLASSE SE TRATA DE UM REPOSOTÓRIO
/* DENTRO DA INTERFACE DE JPA.REPOSITORY, TEM-SE VARIAS FUNCIONALIDADES/CONTRATOS QUE
 * NOS AJUDAM A MANIPULAR OS DADOS DENTRO DO BANCO DE DADOS. eX: FINDALL, FINDBYID, DELETE, 
 * SAVE, ETC. ENTRETANTO, EXISTEM ALTERAÇÕES QUE NÃO EXISTEM NA INTERFACE JPA, ENTÃO 
 * PRECISAMOS CRIAR MÉTODOS PARA AS CONSULTAS (CONSULTA PELO TITULO DE POSTAGEM) */


@Repository
public interface PostagemRepositorio extends JpaRepository <Postagem, Long> {
	
	
	/* MÉTODO PUBLICO QUE RETORNA UMA LISTA DE POSTAGEM. SEU NOME VAI SER IGUAL A SUA
	 * FUNCIONALIDADE (FINDALLBYTITULOCONTAININGIGNORECASE) COM PARAMETRO String TITULO 
	 * O MÉTODO DIZ: BUSCAR TODOS PELO TITULO ( QUE É NOME DO ATRIBUTO DA ENTIDADE POSTAGEM).
	 * O CONTAINING É O MESMO QUE ''LIKE'' EM MYSQL, ESPECIFICA QUE TODOS OS CARACTERES
	 * DENTRO DE TITULO SERÃO TRAZIDOS. IGNORE CASE PADRONIZA O QUE É TRAZIDO IGNORA A 
	 * PRESENÇA DE MAÍSCULA OU MINÚSCULA
	*/
	public List <Postagem> findAllByTituloContainingIgnoreCase (String titulo);
}	
 